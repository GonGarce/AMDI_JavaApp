name: Create release
on:
  push:
    tags:
      - "v*"

jobs:
  build:
    strategy:
      matrix:
        os: [ macos-latest, ubuntu-latest, windows-latest ]
    name: Build the application
    runs-on: ${{ matrix.os }}
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: '23'
          distribution: 'temurin'
      - run: mvn -B install
      - run: mkdir staging && cp target/installer/*.* staging
      - name: upload build result
        uses: actions/upload-artifact@v4
        with:
          path: staging
          name: AppMVC-${{matrix.os}}
          retention-days: 1
          overwrite: true
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build]
    permissions:
      contents: write
    steps:
    - name: Create realease folder
      run: mkdir release
    - name: Download Mac installer
      uses: actions/download-artifact@v4
      with:
        name: AppMVC-macos-latest
        path: release
    - name: Download Linux installer
      uses: actions/download-artifact@v4
      with:
        name: AppMVC-ubuntu-latest
        path: release
    - name: Download Windows installer
      uses: actions/download-artifact@v4
      with:
        name: AppMVC-windows-latest
        path: release
    - name: Display structure of downloaded files
      run: ls -R release
    - name: Create release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ github.ref_name }}
      run: |
        gh release delete "$tag" \
            --repo="$GITHUB_REPOSITORY" \
            -y
        gh release create "$tag" \
            --repo="$GITHUB_REPOSITORY" \
            --title="${tag#v}" \
            --generate-notes \
            release/*.exe \
            release/*.rpm \
            release/*.pkg